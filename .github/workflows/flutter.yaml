name: Flutter CI/CD Configuration

# Command ini digunakan untuk mentrigger workflow ini menggunakan
# event push tag pada branch master
on:
  push:
    tags:
      - "v*.*.*" # on every version tag will build a new android artifact.
jobs:
  build:
    name: Build APK
    environment: CI/CD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      # Menyiapkan Java
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "21.x"

      # Menyiapkan Flutter dengan menggunakan channel stable
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      # Step yang ini digunakan yntuk men sign apk/aab supaya dapat di publish ke playstore
      # Jika tidak ingin sign apk maka bisa di comment saja 2 step ini
      # Disini saya comment karena scopenya cuma sampai Github saja

    

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.RELEASE_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.RELEASE_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.RELEASE_KEY_ALIAS }}" >> android/key.properties

      - name: create env file
        run: |
          touch .env
          echo DOMAIN="${{ secrets.DOMAIN }}" >> .env
          echo DOMAIN_CURR="${{ secrets.DOMAIN_CURR }}" >> .env
          echo DOMAIN_IDX="${{ secrets.DOMAIN_IDX }}" >> .env
          echo RELEASE_STORE_PASSWORD="${{ secrets.RELEASE_STORE_PASSWORD }}" >> .env
          echo RELEASE_STORE_PATH="${{ secrets.RELEASE_STORE_PATH }}" >> .env
          echo RELEASE_KEY_ALIAS="${{ secrets.RELEASE_KEY_ALIAS }}" >> .env
          echo RELEASE_KEY_PASSWORD="${{ secrets.RELEASE_KEY_PASSWORD }}" >> .env
          cat .env

      - uses: actions/checkout@v4
      - name: Download Android keystores
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: golden-keystore.jks
          encodedString: ${{ secrets.RELEASE_STORE_PATH }}

      - uses: actions/checkout@v4
      - name: Download env
        id: android_env
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: .env
          encodedString: ${{ secrets.KEY_PROPERTIES_PROD }}


      - name: Decode android/neumodore_key.jks
        run: echo "${{ secrets.KEYSTORE_JKS_PROD }}" | base64 --decode > android/app/golden-keystore.jks

      - name: Decode android/key.properties
        run: echo "${{ secrets.KEY_PROPERTIES_PROD }}" | base64 --decode > android/key.properties

      # Step ini digunakan untuk mengubah versi pada pubspec.yaml sesuai dengan tag yang di push
      - name: Replace YAML version with tag version
        run: |
          sed -i 's/99.99.99+99/'$GIT_TAG_NAME'/g' pubspec.yaml|
          echo "Tag used version:"$GIT_TAG_NAME

      # Step ini digunakan untuk menginstall dependency yang dibutuhkan
      - name: Pub Get Packages
        run: flutter pub get

      # Step ini digunakan untuk build apk dan split per abi
      - name: Build APK
        run: flutter build apk --split-per-abi --release

      # Step ini digunakan untuk build aab
      - name: Build APPBUNDLE
        run: flutter build appbundle --release

      # Step ini digunakan untuk merelease apk dan aab ke github release
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/*.aab"
      
      - name: Save APPBUNDLE to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: APPBUNDLE
          path: build/app/outputs/bundle/release/app-release.aab
  
  release_internal:
    #2. Release Artifact ke Internal track Play Console
    name: Release Artifacts to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get APPBUNDLE from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: APPBUNDLE
      - name: Release APPBUNDLE to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          # Ini didapat dari service account yang sudah dibuat
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_SERVICE_JSONKEY }}
          # Ini didapat dari nama package yang sudah diupload melalui internal track
          packageName: com.rencanggunung.golden_price
          releaseFiles: app-release.aab
          track: internal
          status: draft         
          isDraftRelease: false
          changesNotSentForReview: true